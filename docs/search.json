[
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Allen’s Resume",
    "section": "",
    "text": "Download PDF file."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Allen Abraham",
    "section": "",
    "text": "Marketing Analytics Website"
  },
  {
    "objectID": "projects/project 1/index.html",
    "href": "projects/project 1/index.html",
    "title": "Making a quarto page",
    "section": "",
    "text": "import pandas as pd\nhi how are you"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "My Projects",
    "section": "",
    "text": "A Replication of Karlan and List (2007)\n\n\n\n\n\n\nAllen Abraham\n\n\nApr 12, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nMaking a quarto page\n\n\n\n\n\n\nAllen Abraham\n\n\nApr 12, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/project 1/index.html#sub-section",
    "href": "projects/project 1/index.html#sub-section",
    "title": "Making a quarto page",
    "section": "Sub-section",
    "text": "Sub-section\n\nHeader\n\nsome\nnumbers\nin\na\nlist\n\ntext can be bold, or italics, or strikethrough\nMy website is http://www.google.com or here"
  },
  {
    "objectID": "projects/Trial Assignment/index.html",
    "href": "projects/Trial Assignment/index.html",
    "title": "Making a quarto page",
    "section": "",
    "text": "import pandas as pd\nhi how are you"
  },
  {
    "objectID": "projects/Trial Assignment/index.html#sub-section",
    "href": "projects/Trial Assignment/index.html#sub-section",
    "title": "Making a quarto page",
    "section": "Sub-section",
    "text": "Sub-section\n\nHeader\n\nsome\nnumbers\nin\na\nlist\n\ntext can be bold, or italics, or strikethrough\nMy website is http://www.google.com or here"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Allen Abraham",
    "section": "",
    "text": "Marketing Analytics Website"
  },
  {
    "objectID": "projects/Assignment 1/hw1_questions.html",
    "href": "projects/Assignment 1/hw1_questions.html",
    "title": "A Replication of Karlan and List (2007)",
    "section": "",
    "text": "Dean Karlan at Yale and John List at the University of Chicago conducted a field experiment to test the effectiveness of different fundraising letters. They sent out 50,000 fundraising letters to potential donors, randomly assigning each letter to one of three treatments: a standard letter, a matching grant letter, or a challenge grant letter. They published the results of this experiment in the American Economic Review in 2007. The article and supporting data are available from the AEA website and from Innovations for Poverty Action as part of Harvard’s Dataverse.\nThis project seeks to replicate their results. Expand this part"
  },
  {
    "objectID": "projects/Assignment 1/hw1_questions.html#introduction",
    "href": "projects/Assignment 1/hw1_questions.html#introduction",
    "title": "A Replication of Karlan and List (2007)",
    "section": "",
    "text": "Dean Karlan at Yale and John List at the University of Chicago conducted a field experiment to test the effectiveness of different fundraising letters. They sent out 50,000 fundraising letters to potential donors, randomly assigning each letter to one of three treatments: a standard letter, a matching grant letter, or a challenge grant letter. They published the results of this experiment in the American Economic Review in 2007. The article and supporting data are available from the AEA website and from Innovations for Poverty Action as part of Harvard’s Dataverse.\nThis project seeks to replicate their results. Expand this part"
  },
  {
    "objectID": "projects/Assignment 1/hw1_questions.html#data",
    "href": "projects/Assignment 1/hw1_questions.html#data",
    "title": "A Replication of Karlan and List (2007)",
    "section": "Data",
    "text": "Data\n\nimport pandas as pd\n\ndata = pd.read_stata('data/karlan_list_2007.dta')\ndata.to_csv('data/karlan_list_2007.csv', index=False)\ndata\n\n\n\n\n\n\n\n\ntreatment\ncontrol\nratio\nratio2\nratio3\nsize\nsize25\nsize50\nsize100\nsizeno\n...\nredcty\nbluecty\npwhite\npblack\npage18_39\nave_hh_sz\nmedian_hhincome\npowner\npsch_atlstba\npop_propurban\n\n\n\n\n0\n0\n1\nControl\n0\n0\nControl\n0\n0\n0\n0\n...\n0.0\n1.0\n0.446493\n0.527769\n0.317591\n2.10\n28517.0\n0.499807\n0.324528\n1.000000\n\n\n1\n0\n1\nControl\n0\n0\nControl\n0\n0\n0\n0\n...\n1.0\n0.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n2\n1\n0\n1\n0\n0\n$100,000\n0\n0\n1\n0\n...\n0.0\n1.0\n0.935706\n0.011948\n0.276128\n2.48\n51175.0\n0.721941\n0.192668\n1.000000\n\n\n3\n1\n0\n1\n0\n0\nUnstated\n0\n0\n0\n1\n...\n1.0\n0.0\n0.888331\n0.010760\n0.279412\n2.65\n79269.0\n0.920431\n0.412142\n1.000000\n\n\n4\n1\n0\n1\n0\n0\n$50,000\n0\n1\n0\n0\n...\n0.0\n1.0\n0.759014\n0.127421\n0.442389\n1.85\n40908.0\n0.416072\n0.439965\n1.000000\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n50078\n1\n0\n1\n0\n0\n$25,000\n1\n0\n0\n0\n...\n0.0\n1.0\n0.872797\n0.089959\n0.257265\n2.13\n45047.0\n0.771316\n0.263744\n1.000000\n\n\n50079\n0\n1\nControl\n0\n0\nControl\n0\n0\n0\n0\n...\n0.0\n1.0\n0.688262\n0.108889\n0.288792\n2.67\n74655.0\n0.741931\n0.586466\n1.000000\n\n\n50080\n0\n1\nControl\n0\n0\nControl\n0\n0\n0\n0\n...\n1.0\n0.0\n0.900000\n0.021311\n0.178689\n2.36\n26667.0\n0.778689\n0.107930\n0.000000\n\n\n50081\n1\n0\n3\n0\n1\nUnstated\n0\n0\n0\n1\n...\n1.0\n0.0\n0.917206\n0.008257\n0.225619\n2.57\n39530.0\n0.733988\n0.184768\n0.634903\n\n\n50082\n1\n0\n3\n0\n1\n$25,000\n1\n0\n0\n0\n...\n0.0\n1.0\n0.530023\n0.074112\n0.340698\n3.70\n48744.0\n0.717843\n0.127941\n0.994181\n\n\n\n\n50083 rows × 51 columns\n\n\n\n\nDescription of Data\nThe data set contains 50,083 observations and 51 variables. The key variables are as follows:\n\n\n\n\n\n\nVariable Definitions\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\nDescription\n\n\n\n\ntreatment\nTreatment\n\n\ncontrol\nControl\n\n\nratio\nMatch ratio\n\n\nratio2\n2:1 match ratio\n\n\nratio3\n3:1 match ratio\n\n\nsize\nMatch threshold\n\n\nsize25\n$25,000 match threshold\n\n\nsize50\n$50,000 match threshold\n\n\nsize100\n$100,000 match threshold\n\n\nsizeno\nUnstated match threshold\n\n\nask\nSuggested donation amount\n\n\naskd1\nSuggested donation was highest previous contribution\n\n\naskd2\nSuggested donation was 1.25 x highest previous contribution\n\n\naskd3\nSuggested donation was 1.50 x highest previous contribution\n\n\nask1\nHighest previous contribution (for suggestion)\n\n\nask2\n1.25 x highest previous contribution (for suggestion)\n\n\nask3\n1.50 x highest previous contribution (for suggestion)\n\n\namount\nDollars given\n\n\ngave\nGave anything\n\n\namountchange\nChange in amount given\n\n\nhpa\nHighest previous contribution\n\n\nltmedmra\nSmall prior donor: last gift was less than median $35\n\n\nfreq\nNumber of prior donations\n\n\nyears\nNumber of years since initial donation\n\n\nyear5\nAt least 5 years since initial donation\n\n\nmrm2\nNumber of months since last donation\n\n\ndormant\nAlready donated in 2005\n\n\nfemale\nFemale\n\n\ncouple\nCouple\n\n\nstate50one\nState tag: 1 for one observation of each of 50 states; 0 otherwise\n\n\nnonlit\nNonlitigation\n\n\ncases\nCourt cases from state in 2004-5 in which organization was involved\n\n\nstatecnt\nPercent of sample from state\n\n\nstateresponse\nProportion of sample from the state who gave\n\n\nstateresponset\nProportion of treated sample from the state who gave\n\n\nstateresponsec\nProportion of control sample from the state who gave\n\n\nstateresponsetminc\nstateresponset - stateresponsec\n\n\nperbush\nState vote share for Bush\n\n\nclose25\nState vote share for Bush between 47.5% and 52.5%\n\n\nred0\nRed state\n\n\nblue0\nBlue state\n\n\nredcty\nRed county\n\n\nbluecty\nBlue county\n\n\npwhite\nProportion white within zip code\n\n\npblack\nProportion black within zip code\n\n\npage18_39\nProportion age 18-39 within zip code\n\n\nave_hh_sz\nAverage household size within zip code\n\n\nmedian_hhincome\nMedian household income within zip code\n\n\npowner\nProportion house owner within zip code\n\n\npsch_atlstba\nProportion who finished college within zip code\n\n\npop_propurban\nProportion of population urban within zip code\n\n\n\n\n\n\n\n\nBalance Test\nAs an ad hoc test of the randomization mechanism, I provide a series of tests that compare aspects of the treatment and control groups to assess whether they are statistically significantly different from one another.\ntodo: test a few variables other than the key outcome variables (for example, test months since last donation) to see if the treatment and control groups are statistically significantly different at the 95% confidence level. Do each as a t-test and separately as a linear regression, and confirm you get the exact same results from both methods. When doing a t-test, use the formula in the class slides. When doing the linear regression, regress for example mrm2 on treatment and look at the estimated coefficient on the treatment variable. It might be helpful to compare parts of your analysis to Table 1 in the paper. Be sure to comment on your results (hint: why is Table 1 included in the paper).\n\nMonths Since Last Donation (mrm2)\nUsing the variable mrm2, I test the balance of the treatment and control groups. I first calculate the difference in means between the treatment and control groups and then use both a t-test and linear regression to test whether this difference is statistically significant at the 95% confidence level.\n\n#first, let's test the balance of the treatment and control groups on the variable mrm2 using a t-test\n\n#average months since last donation for the treatment group\ntreatment_mrm2 = data[data['treatment'] == 1]['mrm2'].mean()\n\n#average months since last donation for the control group\ncontrol_mrm2 = data[data['control'] == 1]['mrm2'].mean()\n\n#standard deviation of months since last donation for the treatment group\ntreatment_mrm2_sd = data[data['treatment'] == 1]['mrm2'].std()\n\n#standard deviation of months since last donation for the control group\ncontrol_mrm2_sd = data[data['control'] == 1]['mrm2'].std()\n\n#number of observations in the treatment group\nn_treatment = data['treatment'].sum()\n\n#number of observations in the control group\nn_control = data['control'].sum()\n\n#difference in means between the treatment and control groups\ndiff_mrm2 = treatment_mrm2 - control_mrm2\n\nprint(\"difference in means between control and treatment group for mrm2: \", diff_mrm2)\n\n#t-statistic\nt_stat_mrm2 = (treatment_mrm2 - control_mrm2) / (((treatment_mrm2_sd**2 / n_treatment) + (control_mrm2_sd**2 / n_control))**0.5)\n\nprint(\"t-statistic for mrm2: \", t_stat_mrm2)\n\n\n#convert the t-statistic to a p-value\nfrom scipy.stats import t\n\np_value_mrm2 = t.sf(t_stat_mrm2, n_treatment + n_control - 2)*2\n\nprint(\"p-value for mrm2: \", p_value_mrm2)\n\ndifference in means between control and treatment group for mrm2:  0.013685851546783923\nt-statistic for mrm2:  0.11953214935937886\np-value for mrm2:  0.9048542505673348\n\n\n\n#now let's test the balance of the treatment and control groups on the variable mrm2 using a linear regression\n\nimport statsmodels.api as sm\n\nmodel = sm.OLS.from_formula('mrm2 ~ treatment', data=data)\nresults = model.fit()\n\n#extract the coefficient and p_value on the treatment variable\ncoef = results.params['treatment']\nt_stat = results.tvalues['treatment']\np_value = results.pvalues['treatment']\n\nprint(\"coefficient for mrm2: \", coef)\nprint(\"t-statistic for mrm2: \", t_stat)\nprint(\"p-value for mrm2: \", p_value)\n\ncoefficient for mrm2:  0.013685851546783642\nt-statistic for mrm2:  0.11949210581591664\np-value for mrm2:  0.9048859731777759\n\n\nUsing both the t-test and linear regression, the p-value for the difference in means between the treatment and control groups for the variable mrm2 is 0.905. This means that if the null hypothesis is true, we would expect to see a difference in means as extreme as the one we observed in 0.905% of cases. Therefore, we fail to reject the null hypothesis that the treatment and control groups are statistically significantly different at the 95% confidence level. This suggests that the randomization was successful and the treatment and control groups are balanced with respect to the variable mrm2.\n\n\nHighest Previous Contribution (hpa)\nNext, I test the balance of the treatment and control groups on the variable hpa using both a t-test and linear regression.\n\n#average highest previous contribution for the treatment group\ntreatment_hpa = data[data['treatment'] == 1]['hpa'].mean()\n\n#average highest previous contribution for the control group\ncontrol_hpa = data[data['control'] == 1]['hpa'].mean()\n\n#standard deviation of highest previous contribution for the treatment group\ntreatment_hpa_sd = data[data['treatment'] == 1]['hpa'].std()\n\n#standard deviation of highest previous contribution for the control group\ncontrol_hpa_sd = data[data['control'] == 1]['hpa'].std()\n\n#number of observations in the treatment group\nn_treatment = data['treatment'].sum()\n\n#number of observations in the control group\nn_control = data['control'].sum()\n\n#difference in means between the treatment and control groups\ndiff_hpa = treatment_hpa - control_hpa\n\nprint(\"difference in means between control and treatment group for hpa: \", diff_hpa)\n\n#t-statistic\nt_stat_hpa = (treatment_hpa - control_hpa) / (((treatment_hpa_sd**2 / n_treatment) + (control_hpa_sd**2 / n_control))**0.5)\n\nprint(\"t-statistic for hpa: \", t_stat_hpa)\n\n#convert the t-statistic to a p-value\np_value_hpa = t.sf(t_stat_hpa, n_treatment + n_control - 2)*2\n\nprint(\"p-value for hpa: \", p_value_hpa)\n\ndifference in means between control and treatment group for hpa:  0.6370735\nt-statistic for hpa:  0.9703896843548359\np-value for hpa:  0.3318569750696071\n\n\n\n#now let's test the balance of the treatment and control groups on the variable hpa using a linear regression\n\nmodel = sm.OLS.from_formula('hpa ~ treatment', data=data)\nresults = model.fit()\n\n#extract the coefficient and p_value on the treatment variable\ncoef = results.params['treatment']\nt_stat = results.tvalues['treatment']\np_value = results.pvalues['treatment']\n\nprint(\"coefficient for hpa: \", coef)\nprint(\"t-statistic for hpa: \", t_stat)\nprint(\"p-value for hpa: \", p_value)\n\ncoefficient for hpa:  0.6370752896561251\nt-statistic for hpa:  0.9441476332014095\np-value for hpa:  0.3450987657186726\n\n\nUsing both the t-test and linear regression, the p-value for the difference in means between the treatment and control groups for the variable hpa is 0.34. This means that if the null hypothesis is true, we would expect to see a difference in means as extreme as the one we observed in 34% of cases. Therefore, we fail to reject the null hypothesis that the treatment and control groups are statistically significantly different at the 95% confidence level. This suggests that the randomization was successful and the treatment and control groups are balanced with respect to the variable hpa.\n\n\n\nCharitable Contribution Made\nFirst, I analyze whether matched donations lead to an increased response rate of making a donation.\ntodo: make a barplot with two bars. Each bar is the proportion of people who donated. One bar for treatment and one bar for control.\n\nimport matplotlib.pyplot as plt\n\n#proportion of people who donated in the treatment group\nprop_treatment = data[data['treatment'] == 1]['gave'].mean()\n\n#proportion of people who donated in the control group\nprop_control = data[data['control'] == 1]['gave'].mean()\n\nplt.bar(['Treatment', 'Control'], [prop_treatment, prop_control])\nplt.ylabel('Proportion of People Who Donated')\nplt.title('Proportion of People Who Donated by Treatment and Control Group')\nplt.show()\n\n\n\n\n\n\n\n\ntodo: run a t-test between the treatment and control groups on the binary outcome of whether any charitable donation was made. Also run a bivariate linear regression that demonstrates the same finding. (It may help to confirm your calculations match Table 2a Panel A.) Report your statistical results and interpret them in the context of the experiment (e.g., if you found a difference with a small p-value or that was statistically significant at some threshold, what have you learned about human behavior? Use mostly English words, not numbers or stats, to explain your finding.)\n\n#t-test between treatment and control groups on the binary outcome of whether any charitable donation was made\nfrom scipy.stats import ttest_ind\n\ntreatment_gave = data[data['treatment'] == 1]['gave']\ncontrol_gave = data[data['control'] == 1]['gave']\n\ndiff = treatment_gave.mean() - control_gave.mean()\n\nt_stat, p_value = ttest_ind(treatment_gave, control_gave)\n\nprint(\"difference in response rates between control and treatment: \", diff)\nprint(\"t-statistic: \", t_stat)\nprint(\"p-value: \", p_value)\n\ndifference in response rates between control and treatment:  0.00418035451294875\nt-statistic:  3.101361000543946\np-value:  0.0019274025949016982\n\n\n\n#bivariate linear regression that demonstrates the same finding\nmodel = sm.OLS(data['gave'], sm.add_constant(data['treatment']))\nresults = model.fit()\n\n#extract the coefficient and p_value on the treatment variable\ncoef = results.params['treatment']\nt_stat = results.tvalues['treatment']\np_value = results.pvalues['treatment']\n\nprint(\"coefficient: \", coef)\nprint(\"t-statistic: \", t_stat)\nprint(\"p-value: \", p_value)\n\ncoefficient:  0.004180354512948743\nt-statistic:  3.101361000543942\np-value:  0.0019274025949017242\n\n\nThe t-test and linear regression both show that the difference in response rates between the treatment and control groups is statistically significant at the 95% confidence level. This suggests that the treatment of receiving a matched donation led to an increased likelihood of making a charitable donation. This finding is consistent with the results reported in Table 2a Panel A of the paper and their interpretation that the treatment effect is statistically significant.\ntodo: run a probit regression where the outcome variable is whether any charitable donation was made and the explanatory variable is assignment to treatment or control. Confirm that your results replicate Table 3 column 1 in the paper.\n\nmodel = sm.Probit(data['gave'], sm.add_constant(data['treatment']))\nresults = model.fit()\n\n\n\ncoef = results.params['treatment']\nz_stat = results.tvalues['treatment']\np_value = results.pvalues['treatment']\n\nprint(\"coefficient\", coef)\nprint(\"z-statistic: \", z_stat)\nprint(\"p-value: \", p_value)\n\n#model summary\nresults.summary()\n\nOptimization terminated successfully.\n         Current function value: 0.100443\n         Iterations 7\ncoefficient 0.08678462244745848\nz-statistic:  3.112930073795023\np-value:  0.0018523990147783487\n\n\n\nProbit Regression Results\n\n\nDep. Variable:\ngave\nNo. Observations:\n50083\n\n\nModel:\nProbit\nDf Residuals:\n50081\n\n\nMethod:\nMLE\nDf Model:\n1\n\n\nDate:\nFri, 12 Apr 2024\nPseudo R-squ.:\n0.0009783\n\n\nTime:\n18:38:06\nLog-Likelihood:\n-5030.5\n\n\nconverged:\nTrue\nLL-Null:\n-5035.4\n\n\nCovariance Type:\nnonrobust\nLLR p-value:\n0.001696\n\n\n\n\n\n\n\ncoef\nstd err\nz\nP&gt;|z|\n[0.025\n0.975]\n\n\nconst\n-2.1001\n0.023\n-90.073\n0.000\n-2.146\n-2.054\n\n\ntreatment\n0.0868\n0.028\n3.113\n0.002\n0.032\n0.141\n\n\n\n\n\nThe probit regression confirms that the coefficient on the treatment variable is statistically significant at the 95% confidence level. This result is consistent with the findings reported in Table 3 column 1 of the paper, which suggests that the treatment of receiving a matched donation led to an increased likelihood of making a charitable donation.\n\n\nDifferences between Match Rates\nNext, I assess the effectiveness of different sizes of matched donations on the response rate.\n_todo: Use a series of t-tests to test whether the size of the match ratio has an effect on whether people donate or not. For example, does the 2:1 match rate lead increase the likelihood that someone donates as compared to the 1:1 match rate? Do your results support the “figures suggest” comment the authors make on page 8?\n\n#t-test between 1:1 and 2:1 match ratios on the binary outcome of whether any charitable donation was made\ntreatment_gave_1 = data[data['treatment'] == 1]['gave'][data['ratio'] == 1]\ntreatment_gave_2 = data[data['treatment'] == 1]['gave'][data['ratio'] == 2]\n\ndiff = treatment_gave_2.mean() - treatment_gave_1.mean()\n\nt_stat, p_value = ttest_ind(treatment_gave_2, treatment_gave_1)\n\nprint(\"difference in response rates between 1:1 and 2:1 match ratios: \", diff)\nprint(\"t-statistic: \", t_stat)\nprint(\"p-value: \", p_value)\n\ndifference in response rates between 1:1 and 2:1 match ratios:  0.0018842510217149944\nt-statistic:  0.96504713432247\np-value:  0.33453168549723933\n\n\n\n#t-test between 2:1 and 3:1 match ratios on the binary outcome of whether any charitable donation was made\ntreatment_gave_2 = data[data['treatment'] == 1]['gave'][data['ratio'] == 2]\ntreatment_gave_3 = data[data['treatment'] == 1]['gave'][data['ratio'] == 3]\n\ndiff = treatment_gave_3.mean() - treatment_gave_2.mean()\n\nt_stat, p_value = ttest_ind(treatment_gave_3, treatment_gave_2)\n\nprint(\"difference in response rates between 2:1 and 3:1 match ratios: \", diff)\nprint(\"t-statistic: \", t_stat)\nprint(\"p-value: \", p_value)\n\ndifference in response rates between 2:1 and 3:1 match ratios:  0.00010002398025293902\nt-statistic:  0.05011583793874515\np-value:  0.9600305283739325\n\n\n\n#t-test between 1:1 and 3:1 match ratios on the binary outcome of whether any charitable donation was made\ntreatment_gave_1 = data[data['treatment'] == 1]['gave'][data['ratio'] == 1]\ntreatment_gave_3 = data[data['treatment'] == 1]['gave'][data['ratio'] == 3]\n\ndiff = treatment_gave_3.mean() - treatment_gave_1.mean()\n\nt_stat, p_value = ttest_ind(treatment_gave_3, treatment_gave_1)\n\nprint(\"difference in response rates between 1:1 and 3:1 match ratios: \", diff)\nprint(\"t-statistic: \", t_stat)\nprint(\"p-value: \", p_value)\n\ndifference in response rates between 1:1 and 3:1 match ratios:  0.0019842750019679334\nt-statistic:  1.0150255853798622\np-value:  0.3101046637086672\n\n\nThe t-tests and the resulting p-values show that the difference in response rates between the 1:1 and 2:1 match ratios, the 2:1 and 3:1 match ratios, and the 1:1 and 3:1 match ratios are all statistically insignificant at the 95% confidence level. This suggests that the size of the matched donation does not have a statistically significant effect on the likelihood of making a charitable donation. This finding is consistent with the comment the authors make on page 8, which suggests that the figures do not suggest a clear pattern of increasing response rates with larger match ratios.\ntodo: Assess the same issue using a regression. Specifically, create the variable ratio1 then regress gave on ratio1, ratio2, and ratio3 (or alternatively, regress gave on the categorical variable ratio). Interpret the coefficients and their statistical precision.\n\n# Create a new variable 'ratio1' that is equal to 1 if the match ratio is 1:1 and 0 otherwise\ndata['ratio1'] = (data['ratio'] == 1).astype(int)\n\nmodel = sm.Probit.from_formula('gave ~ ratio1 + ratio2 + ratio3', data=data)\nresults = model.fit()\n\nresults.summary()\n\nOptimization terminated successfully.\n         Current function value: 0.100430\n         Iterations 7\n\n\n\nProbit Regression Results\n\n\nDep. Variable:\ngave\nNo. Observations:\n50083\n\n\nModel:\nProbit\nDf Residuals:\n50079\n\n\nMethod:\nMLE\nDf Model:\n3\n\n\nDate:\nFri, 12 Apr 2024\nPseudo R-squ.:\n0.001108\n\n\nTime:\n18:38:07\nLog-Likelihood:\n-5029.8\n\n\nconverged:\nTrue\nLL-Null:\n-5035.4\n\n\nCovariance Type:\nnonrobust\nLLR p-value:\n0.01091\n\n\n\n\n\n\n\ncoef\nstd err\nz\nP&gt;|z|\n[0.025\n0.975]\n\n\nIntercept\n-2.1001\n0.023\n-90.073\n0.000\n-2.146\n-2.054\n\n\nratio1\n0.0616\n0.036\n1.726\n0.084\n-0.008\n0.132\n\n\nratio2\n0.0980\n0.035\n2.792\n0.005\n0.029\n0.167\n\n\nratio3\n0.0998\n0.035\n2.847\n0.004\n0.031\n0.169\n\n\n\n\n\nThe regression results show that the coefficients on the ratio variable are statistically insignificant at the 90% confidence level. Ratio1 (1:1) has a coefficient of -0.0029 with p-value of .097, ratio2 (2:1) has a coefficient of -0.0048 with p-value of .006, and ratio3 (3:1) has a coefficient of -0.0049 with p-value of .005. This suggests that the\ntodo: Calculate the response rate difference between the 1:1 and 2:1 match ratios and the 2:1 and 3:1 ratios. Do this directly from the data, and do it by computing the differences in the fitted coefficients of the previous regression. what do you conclude regarding the effectiveness of different sizes of matched donations?\n\n\nSize of Charitable Contribution\nIn this subsection, I analyze the effect of the size of matched donation on the size of the charitable contribution.\ntodo: Calculate a t-test or run a bivariate linear regression of the donation amount on the treatment status. What do we learn from doing this analysis?\n\n#t-test between treatment and control groups on the donation amount\ntreatment_amount = data[data['treatment'] == 1]['amount']\ncontrol_amount = data[data['control'] == 1]['amount']\n\ndiff = treatment_amount.mean() - control_amount.mean()\n\nt_stat, p_value = ttest_ind(treatment_amount, control_amount)\n\nprint(\"difference in donation amounts between control and treatment: \", diff)\nprint(\"t-statistic: \", t_stat)\nprint(\"p-value: \", p_value)\n\ndifference in donation amounts between control and treatment:  0.1536054\nt-statistic:  1.8605020225753781\np-value:  0.06282038947470686\n\n\n\n#bivariate linear regression of the donation amount on the treatment status\nmodel = sm.OLS.from_formula('amount ~ treatment', data=data)\nresults = model.fit()\n\n#extract the coefficient and p_value on the treatment variable\ncoef = results.params['treatment']\nt_stat = results.tvalues['treatment']\np_value = results.pvalues['treatment']\n\nprint(\"coefficient: \", coef)\nprint(\"t-statistic: \", t_stat)\nprint(\"p-value: \", p_value)\n\ncoefficient:  0.15360546499194633\nt-statistic:  1.8605026915008567\np-value:  0.06282029492108901\n\n\nThe p-value (.063) for the difference in donation amounts between the treatment and control groups is statistically significant at the 90% confidence level. This suggests that the treatment of receiving a matched donation led to a higher average donation amount.\ntodo: now limit the data to just people who made a donation and repeat the previous analysis. This regression allows you to analyze how much respondents donate conditional on donating some positive amount. Interpret the regression coefficients – what did we learn? Does the treatment coefficient have a causal interpretation?\n\n#limit the data to just people who made a donation\ndonated_data = data[data['gave'] == 1]\n\n#t-test between treatment and control groups on the donation amount among people who donated\ntreatment_amount = donated_data[donated_data['treatment'] == 1]['amount']\ncontrol_amount = donated_data[donated_data['control'] == 1]['amount']\n\ndiff = treatment_amount.mean() - control_amount.mean()\n\nt_stat, p_value = ttest_ind(treatment_amount, control_amount)\n\nprint(\"difference in donation amounts between control and treatment among people who donated: \", diff)\nprint(\"t-statistic: \", t_stat)\nprint(\"p-value: \", p_value)\n\ndifference in donation amounts between control and treatment among people who donated:  -1.6683922\nt-statistic:  -0.5808388615237938\np-value:  0.5614758782284279\n\n\n\n#bivariate linear regression of the donation amount on the treatment status among people who donated\nmodel = sm.OLS.from_formula('amount ~ treatment', data=donated_data)\nresults = model.fit()\n\n#extract the coefficient and p_value on the treatment variable\ncoef = results.params['treatment']\nt_stat = results.tvalues['treatment']\np_value = results.pvalues['treatment']\n\nprint(\"coefficient: \", coef)\nprint(\"t-statistic: \", t_stat)\nprint(\"p-value: \", p_value)\n\ncoefficient:  -1.6683934553392588\nt-statistic:  -0.5808393091689934\np-value:  0.5614755766155095\n\n\nAmong all the people who donated, those who did not recieve the treatment of matching donation actually donated more on average. However, the p-value (.56) suggests that this difference is not statistically significant. So we cannot conclude that the treatment of receiving a matched donation led to a higher average donation amount among people who donated.\n_todo: Make two plot: one for the treatment group and one for the control. Each plot should be a histogram of the donation amounts only among people who donated. Add a red vertical bar or some other annotation to indicate the sample average for each plot.\n\n#plot histogram of donation amounts for the treatment group among people who donated\nplt.hist(donated_data[donated_data['treatment'] == 1]['amount'], bins=20, color='skyblue', edgecolor='black')\nplt.axvline(donated_data[donated_data['treatment'] == 1]['amount'].mean(), color='red', linestyle='dashed', linewidth=2, label='Mean Donation Amount')\nplt.title('Distribution of Donation Amounts Among People Who Donated (Treatment)')\nplt.xlabel('Donation Amount')\nplt.ylabel('Frequency')\nplt.legend()\nplt.show()\n\n#plot histogram of donation amounts for the control group among people who donated\nplt.hist(donated_data[donated_data['control'] == 1]['amount'], bins=20, color='skyblue', edgecolor='black')\nplt.axvline(donated_data[donated_data['control'] == 1]['amount'].mean(), color='red', linestyle='dashed', linewidth=2, label='Mean Donation Amount')\nplt.title('Distribution of Donation Amounts Among People Who Donated (Control)')\nplt.xlabel('Donation Amount')\nplt.ylabel('Frequency')\nplt.legend()\nplt.show()"
  },
  {
    "objectID": "projects/Assignment 1/hw1_questions.html#experimental-results",
    "href": "projects/Assignment 1/hw1_questions.html#experimental-results",
    "title": "A Replication of Karlan and List (2007)",
    "section": "Experimental Results",
    "text": "Experimental Results\n\nCharitable Contribution Made\nFirst, I analyze whether matched donations lead to an increased response rate of making a donation.\ntodo: make a barplot with two bars. Each bar is the proportion of people who donated. One bar for treatment and one bar for control.\ntodo: run a t-test between the treatment and control groups on the binary outcome of whether any charitable donation was made. Also run a bivariate linear regression that demonstrates the same finding. (It may help to confirm your calculations match Table 2a Panel A.) Report your statistical results and interpret them in the context of the experiment (e.g., if you found a difference with a small p-value or that was statistically significant at some threshold, what have you learned about human behavior? Use mostly English words, not numbers or stats, to explain your finding.)\ntodo: run a probit regression where the outcome variable is whether any charitable donation was made and the explanatory variable is assignment to treatment or control. Confirm that your results replicate Table 3 column 1 in the paper.\n\n\nDifferences between Match Rates\nNext, I assess the effectiveness of different sizes of matched donations on the response rate.\ntodo: Use a series of t-tests to test whether the size of the match ratio has an effect on whether people donate or not. For example, does the 2:1 match rate lead increase the likelihood that someone donates as compared to the 1:1 match rate? Do your results support the “figures suggest” comment the authors make on page 8?\ntodo: Assess the same issue using a regression. Specifically, create the variable ratio1 then regress gave on ratio1, ratio2, and ratio3 (or alternatively, regress gave on the categorical variable ratio). Interpret the coefficients and their statistical precision.\ntodo: Calculate the response rate difference between the 1:1 and 2:1 match ratios and the 2:1 and 3:1 ratios. Do this directly from the data, and do it by computing the differences in the fitted coefficients of the previous regression. what do you conclude regarding the effectiveness of different sizes of matched donations?\n\n\nSize of Charitable Contribution\nIn this subsection, I analyze the effect of the size of matched donation on the size of the charitable contribution.\ntodo: Calculate a t-test or run a bivariate linear regression of the donation amount on the treatment status. What do we learn from doing this analysis?\ntodo: now limit the data to just people who made a donation and repeat the previous analysis. This regression allows you to analyze how much respondents donate conditional on donating some positive amount. Interpret the regression coefficients – what did we learn? Does the treatment coefficient have a causal interpretation?\ntodo: Make two plot: one for the treatment group and one for the control. Each plot should be a histogram of the donation amounts only among people who donated. Add a red vertical bar or some other annotation to indicate the sample average for each plot."
  },
  {
    "objectID": "projects/Assignment 1/hw1_questions.html#simulation-experiment",
    "href": "projects/Assignment 1/hw1_questions.html#simulation-experiment",
    "title": "A Replication of Karlan and List (2007)",
    "section": "Simulation Experiment",
    "text": "Simulation Experiment\nAs a reminder of how the t-statistic “works,” in this section I use simulation to demonstrate the Law of Large Numbers and the Central Limit Theorem.\nSuppose the true distribution of respondents who do not get a charitable donation match is Bernoulli with probability p=0.018 that a donation is made.\nFurther suppose that the true distribution of respondents who do get a charitable donation match of any size is Bernoulli with probability p=0.022 that a donation is made.\n\nLaw of Large Numbers\nto do: Make a plot like those on slide 43 from our first class and explain the plot to the reader. To do this, you will simulate 100,00 draws from the control distribution and 10,000 draws from the treatment distribution. You’ll then calculate a vector of 10,000 differences, and then you’ll plot the cumulative average of that vector of differences. Comment on whether the cumulative average approaches the true difference in means.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Separate the treatment and control groups for the \"amount\" variable\ntreatment_amount = data[data['treatment'] == 1]['amount']\ncontrol_amount = data[data['treatment'] == 0]['amount']\n\n# Calculate the true difference in means\ntrue_diff = treatment_amount.mean() - control_amount.mean()\n\nnp.random.seed(0)\n\n# Simulate 100,000 draws from the control distribution\nsimulated_control_draws = np.random.choice(control_amount, 10000, replace=False)\nsimulated_treatment_draws = np.random.choice(treatment_amount, 10000, replace=False)\n\n# Calculate the vector of 10,000 differences\ndifferences = simulated_treatment_draws - simulated_control_draws\n\n# Calculate the cumulative average of the vector of differences\ncumulative_average_differences = np.cumsum(differences) / np.arange(1, 10001)\n\n\nplt.figure(figsize=(10, 6))\nplt.plot(cumulative_average_differences, color='red')\nplt.axhline(y=true_diff, color='black', linestyle='--', label='True Difference in Means')\nplt.xlabel('Number of Draws')\nplt.ylabel('Cumulative Average Difference')\nplt.title('Cumulative Average of Differences in \"Amount\" Between Treatment and Control')\nplt.legend()\nplt.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\nThe plot shows the cumulative average of the differences in “amount” between the treatment and control groups as the number of draws increases. The cumulative average approaches the true difference in means as the number of draws increases, which demonstrates the Law of Large Numbers. This means that the more draws we take, the closer the average difference in “amount” between the treatment and control groups will be to the true difference in means.\n\n\nCentral Limit Theorem\nto do: Make 4 histograms like those on slide 44 from our first class at sample sizes 50, 200, 500, and 1000 and explain these plots to the reader. To do this for a sample size of e.g. 50, take 50 draws from each of the control and treatment distributions, and calculate the average difference between those draws. Then repeat that process 999 more times so that you have 1000 averages. Plot the histogram of those averages. Comment on whether zero is in the “middle” of the distribution or whether it’s in the “tail.”\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ntreatment_amount = data[data['treatment'] == 1]['amount']\ncontrol_amount = data[data['treatment'] == 0]['amount']\n\ntrue_diff =  treatment_amount.mean()-control_amount.mean()\nprint('True Difference in mean of \"amount\" between Control and Treatment:', true_diff)\n\n# Simulate 1000 draws of 50, 200, 500, and 1000 from both the control and treatment distributions\nsample_sizes = [50, 200, 500, 1000]\nnum_simulations = 1000\n\nnp.random.seed(0)\n\nfor sample_size in sample_sizes:\n    sample_diffs = []\n    for _ in range(num_simulations):\n        simulated_control_draws = np.random.choice(control_amount, sample_size, replace=False)\n        simulated_treatment_draws = np.random.choice(treatment_amount, sample_size, replace=False)\n        sample_diffs.append(simulated_treatment_draws.mean() - simulated_control_draws.mean())\n\n    plt.hist(sample_diffs, bins=20, color='skyblue', edgecolor='black')\n    plt.axvline(x=true_diff, color='red', linestyle='--', label='True Difference in Means')\n    plt.xlabel('Sample Difference in Means')\n    plt.ylabel('Frequency')\n    plt.title(f'Histogram of Sample Differences in Means (Sample Size = {sample_size})')\n    plt.legend()\n    plt.show()\n\nTrue Difference in mean of \"amount\" between Control and Treatment: 0.1536054\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe above histgram illustrates the Central Limit Theorem. As the sample size increases, the sampling distribution of the average of differences between the mean becomes normal. The zero is in the middle of the distribution because the true difference in mean of the amount variable between the control and treament is close to zero and the difference is not significant as proven earlier."
  }
]